datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson"]
}

model User {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Char(36)
  email              String               @unique
  name               String               @db.VarChar(100)
  username           String?              @db.VarChar(60)
  password           String?              @db.VarChar(60)
  emailConfirmed     Boolean              @default(false)
  phoneCode          String?              @db.VarChar(5)
  phoneNumber        String?              @db.VarChar(15)
  phoneConfirmed     Boolean              @default(false)
  avatarURL          String?              @db.VarChar(2048)
  createdAt          DateTime             @default(now()) @db.Timestamp(6)
  updatedAt          DateTime             @default(now()) @updatedAt @db.Timestamp(6)
  lastActivityAt     DateTime             @default(now()) @db.Timestamp(6)
  VerificationIntent VerificationIntent[] @relation("UserVerificationIntent")
  Client             Client[]             @relation("UserClient")
}

model VerificationIntent {
  id          String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Char(36)
  user        User                   @relation("UserVerificationIntent", fields: [userId], references: [id])
  userId      String                 @db.Char(36)
  type        VerificationIntentType
  refreshCode String                 @db.VarChar(100)
  expiresAt   DateTime               @default(dbgenerated("now_plus_60_minutes()")) @db.Timestamp(6)
  createdAt   DateTime               @default(now()) @db.Timestamp(6)
  updatedAt   DateTime               @default(now()) @updatedAt @db.Timestamp(6)
}

enum VerificationIntentType {
  EMAIL
  PHONE
}

model Client {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Char(36)
  name        String   @db.VarChar(60)
  website     String?  @db.VarChar(2048)
  userId      String   @db.Char(36)
  user        User     @relation("UserClient", fields: [userId], references: [id])
  authorsLink String?  @db.VarChar(2048)
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(6)
}
